@import 'tailwindcss';
@tailwind base;
@tailwind components;
@tailwind utilities;

@import '../styles/animations.css';

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

/* 
  The default border color has changed to `currentColor` in Tailwind CSS v4, 
  so we've added these compatibility styles to make sure everything still 
  looks the same as it did with Tailwind CSS v3. 

  If we ever want to remove these styles, we need to add an explicit border 
  color utility to any element that depends on these defaults. 
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  body {
    /* Fuentes personalizadas */
    font-family: var(--font-montserrat);
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-poppins);
  }
}

@layer base {
  :root {
      /* Base colors - Mis Huellitas Blue palette */
      --background: 214 100% 97%; /* #F0F8FF - Light blue background */
      --foreground: 212 47% 15%; /* #1E3A5F - Dark blue text */
  
      --card: 214 100% 97%; /* #F0F8FF */
      --card-foreground: 212 47% 15%; /* #1E3A5F */
  
      --popover: 214 100% 97%; /* #F0F8FF */
      --popover-foreground: 212 47% 15%; /* #1E3A5F */
  
      /* Primary color - Deep Blue */
      --primary: 212 47% 25%; /* #2E5A8A - Primary blue */
      --primary-foreground: 0 0% 100%; /* White text on blue */
  
      /* Secondary color - Medium Blue */
      --secondary: 205 45% 32%; /* #4A90C2 - Secondary blue */
      --secondary-foreground: 0 0% 100%; /* White text */
  
      /* Accent color - Light Blue for interactive elements */
      --accent: 204 88% 65%; /* #5DADE2 - Light blue accent */
      --accent-foreground: 212 47% 15%; /* Dark blue text */
  
      /* Highlight color - Bright Blue for special elements */
      --highlight: 202 91% 58%; /* #3498DB - Bright blue */
      --highlight-foreground: 0 0% 100%; /* White text */
  
      /* Muted - For subtle backgrounds */
      --muted: 214 32% 91%; /* #E8F4F8 - Very light blue */
      --muted-foreground: 212 47% 40%; /* Medium blue text */
  
      /* System colors */
      --destructive: 0 84% 60%;
      --destructive-foreground: 0 0% 100%;
  
      --border: 214 32% 85%; /* Light blue border */
      --input: 214 32% 90%; /* Light blue input */
      --ring: 206 61% 45%; /* Secondary blue */
  
      --radius: 0.5rem;
    }
  }

  .dark {
    /* Dark mode with blue theme */
    --background: 212 47% 8%; /* #0D1B2A - Very dark blue */
    --foreground: 214 100% 97%; /* Light blue text */

    --card: 212 47% 8%;
    --card-foreground: 214 100% 97%;

    --popover: 212 47% 8%;
    --popover-foreground: 214 100% 97%;

    /* Primary color in dark mode */
    --primary: 204 88% 65%; /* #5DADE2 - Light blue */
    --primary-foreground: 212 47% 8%;

    /* Secondary color in dark mode */
    --secondary: 206 61% 35%; /* #2E5A8A - Darker blue */
    --secondary-foreground: 214 100% 97%;

    /* Accent color in dark mode */
    --accent: 205 45% 32%; /* #2980B9 - Medium blue */
    --accent-foreground: 214 100% 97%;

    /* Muted in dark mode */
    --muted: 212 47% 12%; /* #1B2F45 - Dark muted blue */
    --muted-foreground: 214 32% 65%; /* Light muted blue */

    /* System colors */
    --destructive: 0 84% 60%;
    --destructive-foreground: 214 100% 97%;

    --border: 212 47% 20%; /* Dark blue border */
    --input: 212 47% 20%; /* Dark blue input */
    --ring: 204 88% 65%; /* Light blue ring */
  }


@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* 
  ---break--- 
*/

@theme inline {
  --animate-grid: grid 15s linear infinite;
  --animate-float: float 6s ease-in-out infinite;
  --animate-slide-in-left: slide-in-left 1s ease-out;
  --animate-slide-in-right: slide-in-right 1s ease-out;
  --animate-fade-in-up: fade-in-up 1s ease-out;
  --animate-morph: morph 8s ease-in-out infinite;
  --animate-blob: blob 10s ease-in-out infinite;
  --animate-wave-gentle: wave-gentle 4s ease-in-out infinite;
  --animate-curve-slide: curve-slide 1.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  --animate-organic-pulse: organic-pulse 3s ease-in-out infinite;
  
  @keyframes grid {
  0% {
    transform: translateY(-50%);
    }
  100% {
    transform: translateY(0);
    }
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }
  
  @keyframes slide-in-left {
    0% {
      opacity: 0;
      transform: translateX(-100px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes slide-in-right {
    0% {
      opacity: 0;
      transform: translateX(100px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes fade-in-up {
    0% {
      opacity: 0;
      transform: translateY(30px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes morph {
    0%, 100% {
      border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    }
    25% {
      border-radius: 30% 70% 70% 30% / 50% 60% 40% 50%;
    }
    50% {
      border-radius: 50% 50% 50% 50% / 50% 50% 50% 50%;
    }
    75% {
      border-radius: 70% 30% 50% 50% / 30% 70% 50% 50%;
    }
  }

  @keyframes blob {
    0%, 100% {
      transform: translateY(0px) scale(1);
      border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
    }
    33% {
      transform: translateY(-10px) scale(1.05);
      border-radius: 70% 30% 60% 40% / 60% 40% 60% 40%;
    }
    66% {
      transform: translateY(5px) scale(0.95);
      border-radius: 40% 60% 30% 70% / 40% 60% 40% 60%;
    }
  }

  @keyframes wave-gentle {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-5px) rotate(1deg);
    }
  }

  @keyframes curve-slide {
    0% {
      opacity: 0;
      transform: translateY(50px) scale(0.8);
      clip-path: polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%);
    }
    50% {
      clip-path: polygon(0% 50%, 100% 30%, 100% 100%, 0% 100%);
    }
    100% {
      opacity: 1;
      transform: translateY(0px) scale(1);
      clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    }
  }

  @keyframes organic-pulse {
    0%, 100% {
      transform: scale(1);
      opacity: 0.3;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.6;
    }
  }
}

body {
  overflow-x: hidden;
}

/* Curved utilities */
.curve-top {
  clip-path: ellipse(100% 55% at 50% 0%);
}

.curve-bottom {
  clip-path: ellipse(100% 55% at 50% 100%);
}

.organic-shape-1 {
  clip-path: polygon(20% 0%, 80% 0%, 100% 20%, 100% 80%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
}

.organic-shape-2 {
  clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
}

.blob-shape {
  clip-path: polygon(60% 0%, 100% 25%, 100% 75%, 60% 100%, 0% 75%, 0% 25%);
}

/* Smooth transitions for curved elements */
.curve-transition {
  transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Glass morphism effects */
.glass-morphism {
  backdrop-filter: blur(16px) saturate(180%);
  background-color: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.125);
}

/* Enhanced curved borders */
.curved-border-complex {
  border-radius: 2rem 0.5rem 2rem 0.5rem;
  position: relative;
}

.curved-border-complex::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: linear-gradient(45deg, hsl(var(--secondary)), hsl(var(--accent)));
  border-radius: inherit;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.curved-border-complex:hover::before {
  opacity: 0.3;
}